import { AfterViewInit, EventEmitter, OnChanges, OnDestroy, Renderer2, SimpleChanges } from "@angular/core";
import { ThemePalette } from "@angular/material/core";
import { EventService } from "./services/event.service";
import * as ɵngcc0 from '@angular/core';
export declare class MatVideoComponent implements AfterViewInit, OnChanges, OnDestroy {
    private renderer;
    private evt;
    private player;
    private video;
    src: string | MediaStream | MediaSource | Blob;
    title: string;
    autoplay: boolean;
    preload: boolean;
    loop: boolean;
    quality: boolean;
    fullscreen: boolean;
    playsinline: boolean;
    showFrameByFrame: boolean;
    fps: number;
    download: boolean;
    color: ThemePalette;
    spinner: string;
    poster: string;
    keyboard: boolean;
    overlay: boolean;
    muted: boolean;
    mutedChange: EventEmitter<boolean>;
    timeChange: EventEmitter<number>;
    time: number;
    playing: boolean;
    isFullscreen: boolean;
    videoWidth: number;
    videoHeight: number;
    lastTime: number;
    videoLoaded: boolean;
    private srcObjectURL;
    private isMouseMoving;
    private isMouseMovingTimer;
    private isMouseMovingTimeout;
    private events;
    constructor(renderer: Renderer2, evt: EventService);
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    load(): void;
    getVideoTag(): HTMLVideoElement | null;
    evLoadedMetadata(event: any): void;
    evMouseMove(event: any): void;
    evTimeUpdate(event: any): void;
    getOverlayClass(activeClass: string, inactiveClass: string): any;
    private setVideoSrc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatVideoComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MatVideoComponent, "mat-video", never, {
    "src": "src";
    "title": "title";
    "autoplay": "autoplay";
    "preload": "preload";
    "loop": "loop";
    "quality": "quality";
    "fullscreen": "fullscreen";
    "playsinline": "playsinline";
    "showFrameByFrame": "showFrameByFrame";
    "fps": "fps";
    "download": "download";
    "color": "color";
    "spinner": "spinner";
    "poster": "poster";
    "keyboard": "keyboard";
    "overlay": "overlay";
    "muted": "muted";
    "time": "time";
}, {
    "mutedChange": "mutedChange";
    "timeChange": "timeChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlkZW8uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInZpZGVvLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBK0NBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgUmVuZGVyZXIyLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgVGhlbWVQYWxldHRlIH0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2NvcmVcIjtcclxuaW1wb3J0IHsgRXZlbnRTZXJ2aWNlIH0gZnJvbSBcIi4vc2VydmljZXMvZXZlbnQuc2VydmljZVwiO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBNYXRWaWRlb0NvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcclxuICAgIHByaXZhdGUgcmVuZGVyZXI7XHJcbiAgICBwcml2YXRlIGV2dDtcclxuICAgIHByaXZhdGUgcGxheWVyO1xyXG4gICAgcHJpdmF0ZSB2aWRlbztcclxuICAgIHNyYzogc3RyaW5nIHwgTWVkaWFTdHJlYW0gfCBNZWRpYVNvdXJjZSB8IEJsb2I7XHJcbiAgICB0aXRsZTogc3RyaW5nO1xyXG4gICAgYXV0b3BsYXk6IGJvb2xlYW47XHJcbiAgICBwcmVsb2FkOiBib29sZWFuO1xyXG4gICAgbG9vcDogYm9vbGVhbjtcclxuICAgIHF1YWxpdHk6IGJvb2xlYW47XHJcbiAgICBmdWxsc2NyZWVuOiBib29sZWFuO1xyXG4gICAgcGxheXNpbmxpbmU6IGJvb2xlYW47XHJcbiAgICBzaG93RnJhbWVCeUZyYW1lOiBib29sZWFuO1xyXG4gICAgZnBzOiBudW1iZXI7XHJcbiAgICBkb3dubG9hZDogYm9vbGVhbjtcclxuICAgIGNvbG9yOiBUaGVtZVBhbGV0dGU7XHJcbiAgICBzcGlubmVyOiBzdHJpbmc7XHJcbiAgICBwb3N0ZXI6IHN0cmluZztcclxuICAgIGtleWJvYXJkOiBib29sZWFuO1xyXG4gICAgb3ZlcmxheTogYm9vbGVhbjtcclxuICAgIG11dGVkOiBib29sZWFuO1xyXG4gICAgbXV0ZWRDaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPjtcclxuICAgIHRpbWVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxudW1iZXI+O1xyXG4gICAgdGltZTogbnVtYmVyO1xyXG4gICAgcGxheWluZzogYm9vbGVhbjtcclxuICAgIGlzRnVsbHNjcmVlbjogYm9vbGVhbjtcclxuICAgIHZpZGVvV2lkdGg6IG51bWJlcjtcclxuICAgIHZpZGVvSGVpZ2h0OiBudW1iZXI7XHJcbiAgICBsYXN0VGltZTogbnVtYmVyO1xyXG4gICAgdmlkZW9Mb2FkZWQ6IGJvb2xlYW47XHJcbiAgICBwcml2YXRlIHNyY09iamVjdFVSTDtcclxuICAgIHByaXZhdGUgaXNNb3VzZU1vdmluZztcclxuICAgIHByaXZhdGUgaXNNb3VzZU1vdmluZ1RpbWVyO1xyXG4gICAgcHJpdmF0ZSBpc01vdXNlTW92aW5nVGltZW91dDtcclxuICAgIHByaXZhdGUgZXZlbnRzO1xyXG4gICAgY29uc3RydWN0b3IocmVuZGVyZXI6IFJlbmRlcmVyMiwgZXZ0OiBFdmVudFNlcnZpY2UpO1xyXG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbiAgICBsb2FkKCk6IHZvaWQ7XHJcbiAgICBnZXRWaWRlb1RhZygpOiBIVE1MVmlkZW9FbGVtZW50IHwgbnVsbDtcclxuICAgIGV2TG9hZGVkTWV0YWRhdGEoZXZlbnQ6IGFueSk6IHZvaWQ7XHJcbiAgICBldk1vdXNlTW92ZShldmVudDogYW55KTogdm9pZDtcclxuICAgIGV2VGltZVVwZGF0ZShldmVudDogYW55KTogdm9pZDtcclxuICAgIGdldE92ZXJsYXlDbGFzcyhhY3RpdmVDbGFzczogc3RyaW5nLCBpbmFjdGl2ZUNsYXNzOiBzdHJpbmcpOiBhbnk7XHJcbiAgICBwcml2YXRlIHNldFZpZGVvU3JjO1xyXG59XHJcbiJdfQ==