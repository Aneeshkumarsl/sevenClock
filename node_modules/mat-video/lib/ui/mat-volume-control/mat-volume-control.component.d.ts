import { AfterViewInit, EventEmitter, OnChanges, SimpleChanges } from "@angular/core";
import { ThemePalette } from "@angular/material/core";
import { EventService } from "../../services/event.service";
import * as ɵngcc0 from '@angular/core';
export declare class MatVolumeControlComponent implements AfterViewInit, OnChanges {
    private evt;
    video: HTMLVideoElement;
    color: ThemePalette;
    volume: number;
    volumeChanged: EventEmitter<number>;
    muted: boolean;
    mutedChanged: EventEmitter<boolean>;
    keyboard: boolean;
    constructor(evt: EventService);
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    setVolume(value: number): void;
    setMuted(value: boolean): void;
    toggleMuted(): void;
    updateMuted(emitChange?: boolean): void;
    onMuteKey(event: KeyboardEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatVolumeControlComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MatVolumeControlComponent, "mat-volume-control", never, {
    "video": "video";
    "color": "color";
    "volume": "volume";
    "muted": "muted";
    "keyboard": "keyboard";
}, {
    "volumeChanged": "volumeChanged";
    "mutedChanged": "mutedChanged";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LXZvbHVtZS1jb250cm9sLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJtYXQtdm9sdW1lLWNvbnRyb2wuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgVGhlbWVQYWxldHRlIH0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2NvcmVcIjtcclxuaW1wb3J0IHsgRXZlbnRTZXJ2aWNlIH0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL2V2ZW50LnNlcnZpY2VcIjtcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTWF0Vm9sdW1lQ29udHJvbENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uQ2hhbmdlcyB7XHJcbiAgICBwcml2YXRlIGV2dDtcclxuICAgIHZpZGVvOiBIVE1MVmlkZW9FbGVtZW50O1xyXG4gICAgY29sb3I6IFRoZW1lUGFsZXR0ZTtcclxuICAgIHZvbHVtZTogbnVtYmVyO1xyXG4gICAgdm9sdW1lQ2hhbmdlZDogRXZlbnRFbWl0dGVyPG51bWJlcj47XHJcbiAgICBtdXRlZDogYm9vbGVhbjtcclxuICAgIG11dGVkQ2hhbmdlZDogRXZlbnRFbWl0dGVyPGJvb2xlYW4+O1xyXG4gICAga2V5Ym9hcmQ6IGJvb2xlYW47XHJcbiAgICBjb25zdHJ1Y3RvcihldnQ6IEV2ZW50U2VydmljZSk7XHJcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xyXG4gICAgc2V0Vm9sdW1lKHZhbHVlOiBudW1iZXIpOiB2b2lkO1xyXG4gICAgc2V0TXV0ZWQodmFsdWU6IGJvb2xlYW4pOiB2b2lkO1xyXG4gICAgdG9nZ2xlTXV0ZWQoKTogdm9pZDtcclxuICAgIHVwZGF0ZU11dGVkKGVtaXRDaGFuZ2U/OiBib29sZWFuKTogdm9pZDtcclxuICAgIG9uTXV0ZUtleShldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XHJcbn1cclxuIl19